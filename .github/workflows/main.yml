name: iOS Build & Upload to TestFlight

on:
  workflow_dispatch:
    inputs:
      version:
        description: "App version (build-name), ví dụ: 1.0.3"
        required: false
        default: ""
      changelog:
        description: "Release notes cho TestFlight"
        required: false
        default: "Automated build via GitHub Actions"
  push:
    tags:
      - "ios-v*"

jobs:
  build-upload-testflight:
    runs-on: macos-14

    env:
      # Non-secret config lấy từ 'Actions > Variables'
      IOS_BUNDLE_ID: ${{ vars.IOS_BUNDLE_ID }}
      APPLE_TEAM_ID: ${{ vars.APPLE_TEAM_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show macOS tools
        run: |
          sw_vers
          xcodebuild -version
          swift --version

      - name: Select Xcode 15 (best effort)
        run: sudo xcode-select -s "/Applications/Xcode_15.4.app/Contents/Developer"
        continue-on-error: true

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      # Import Apple Distribution certificate (.p12) từ Secrets
      - name: Import code signing certificate (.p12)
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_DISTRIBUTION_P12_PASSWORD }}

      # Tải App Store provisioning profile bằng API Key (không cần Apple ID)
      - name: Download App Store provisioning profile
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ env.IOS_BUNDLE_ID }}
          profile-type: IOS_APP_STORE
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      # Thiết lập build-name và build-number
      - name: Set build numbers
        run: |
          echo "BUILD_NUMBER=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
          if [ -n "${{ inputs.version }}" ]; then
            echo "BUILD_NAME=${{ inputs.version }}" >> $GITHUB_ENV
          else
            VERSION_IN_PUBSPEC=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
            echo "BUILD_NAME=${VERSION_IN_PUBSPEC:-1.0.0}" >> $GITHUB_ENV
          fi

      # CocoaPods (best effort)
      - name: Prepare CocoaPods (best effort)
        run: |
          cd ios
          pod repo update || true
          pod install || true

      # Build IPA
      - name: Build iOS IPA (Release)
        env:
          DEVELOPMENT_TEAM: ${{ env.APPLE_TEAM_ID }}
        run: |
          flutter --version
          flutter clean
          flutter build ipa \
            --release \
            --build-name "$BUILD_NAME" \
            --build-number "$BUILD_NUMBER"

      - name: Locate IPA
        id: ipa
        run: |
          IPA_PATH=$(ls build/ios/ipa/*.ipa | head -n 1)
          if [ -z "$IPA_PATH" ]; then
            echo "IPA not found" >&2
            exit 1
          fi
          echo "ipa-path=$IPA_PATH" >> $GITHUB_OUTPUT
          echo "Found IPA: $IPA_PATH"

      - name: Install fastlane
        run: gem install fastlane -NV

      # Tạo JSON API key cho fastlane (api_key_path)
      - name: Create App Store Connect API key JSON
        env:
          APPSTORE_PRIVATE_KEY: ${{ secrets.APPSTORE_PRIVATE_KEY }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        run: |
          python3 - <<'PY'
          import json, os
          data = {
            "key_id": os.environ["APPSTORE_KEY_ID"],
            "issuer_id": os.environ["APPSTORE_ISSUER_ID"],
            "key": os.environ["APPSTORE_PRIVATE_KEY"],
            "in_house": False
          }
          with open("asc_key.json", "w") as f:
            json.dump(data, f)
          print("Wrote asc_key.json")
          PY

      # Upload TestFlight bằng API key, không cần Apple ID
      - name: Upload to TestFlight (fastlane pilot, API key only)
        run: |
          fastlane pilot upload \
            --ipa "${{ steps.ipa.outputs.ipa-path }}" \
            --app_identifier "${{ env.IOS_BUNDLE_ID }}" \
            --api_key_path asc_key.json \
            --changelog "${{ inputs.changelog }}" \
            --skip_waiting_for_build_processing true
