name: iOS TestFlight (Flutter)

on:
  workflow_dispatch:
    inputs:
      build-number:
        description: "Ghi đè build number (tuỳ chọn, ví dụ: 42)"
        required: false
      flavor:
        description: "Flutter flavor (tuỳ chọn, ví dụ: prod)"
        required: false
  push:
    tags:
      - "ios-v*"

concurrency:
  group: ios-testflight-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-upload:
    name: Build & Upload to TestFlight
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.4"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Flutter pub get
        run: flutter pub get

      - name: Install Ruby and Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: false
      - run: gem install fastlane --no-document

      # Import iOS Distribution certificate (.p12)
      - name: Import code signing certificate
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_CERT_PASSWORD }}

      # Tải Provisioning Profile App Store qua App Store Connect API
      - name: Download provisioning profile
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ secrets.IOS_BUNDLE_ID }}
          profile-type: IOS_APP_STORE
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_KEY_P8 }}

      # (Tuỳ chọn) Ghi đè CFBundleVersion nếu người chạy workflow cung cấp build-number
      - name: Override build number (optional)
        if: ${{ inputs.build-number != '' }}
        working-directory: ios
        run: /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{ inputs['build-number'] }}" ./Runner/Info.plist

      - name: Create ExportOptions.plist
        run: |
          cat > ExportOptions.plist <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store</string>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>destination</key>
            <string>export</string>
            <key>manageAppVersionAndBuildNumber</key>
            <true/>
            <key>teamID</key>
            <string>${{ secrets.APPSTORE_TEAM_ID }}</string>
          </dict>
          </plist>
          EOF

      # Build IPA bằng Flutter (Xcode sẽ dùng cert + provisioning profile đã import)
      - name: Build IPA
        env:
          CI: true
        run: |
          if [[ -n "${{ inputs.flavor }}" ]]; then
            FLAVOR="--flavor ${{ inputs.flavor }}"
          else
            FLAVOR=""
          fi
          flutter build ipa --release $FLAVOR --export-options-plist=ExportOptions.plist

      # Tạo file App Store Connect API key JSON cho Fastlane Pilot
      - name: Create App Store Connect API key JSON
        env:
          P8: ${{ secrets.APPSTORE_API_KEY_P8 }}
          KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        run: |
          python3 - <<'PY'
          import json, os
          data = {
            "key_id": os.environ["KEY_ID"],
            "issuer_id": os.environ["ISSUER_ID"],
            "key": os.environ["P8"]
          }
          with open("api_key.json", "w") as f:
            json.dump(data, f)
          PY
          echo "api_key.json created."

      - name: Upload IPA to TestFlight
        run: |
          IPA_PATH=$(ls -1 build/ios/ipa/*.ipa | head -n1)
          echo "Uploading: $IPA_PATH"
          fastlane pilot upload \
            --api_key_path api_key.json \
            --ipa "$IPA_PATH" \
            --skip_waiting_for_build_processing true \
            --skip_submission true

      - name: Print success
        run: echo "✅ Build & upload to TestFlight completed."
