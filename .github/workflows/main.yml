name: iOS TestFlight (Flutter)

on:
  workflow_dispatch:
    inputs:
      build-number:
        description: "Ghi đè build number (tuỳ chọn, ví dụ: 42)"
        required: false
      flavor:
        description: "Flutter flavor (tuỳ chọn, ví dụ: prod)"
        required: false
  push:
    tags:
      - "ios-v*"

concurrency:
  group: ios-testflight-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build:
    name: Build iOS
    runs-on: macos-14
    env:
      # Thay bằng Bundle Identifier thực tế của app
      BUNDLE_ID: com.moazsalem.pillsReminder

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          architecture: x64

      - name: Check Flutter Version
        run: flutter --version

      - name: Check Xcode Version
        run: xcodebuild -version

      - name: Install dependencies
        run: flutter pub get

      # Tạo keychain tạm và import .p12 theo đúng "cách họ làm" (dùng secrets theo ảnh)
      - name: Install Apple certificate into temporary keychain (manual security)
        env:
          IOS_CERT_P12_BASE64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          IOS_CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
        shell: bash
        run: |
          set -euo pipefail
          CERTIFICATE_PATH="$RUNNER_TEMP/build_certificate.p12"
          KEYCHAIN_PATH="$RUNNER_TEMP/app-signing.keychain-db"

          # Decode .p12 từ base64 (loại bỏ CR/LF để tránh lỗi)
          printf '%s' "$IOS_CERT_P12_BASE64" | tr -d '\r\n' | base64 --decode > "$CERTIFICATE_PATH"

          # Tạo keychain tạm (không mật khẩu) và mở khóa
          security create-keychain -p "" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "" "$KEYCHAIN_PATH"

          # Import .p12 (truyền pass qua file để tránh shell expansion)
          printf '%s' "$IOS_CERT_PASSWORD" > p12pw.txt
          security import "$CERTIFICATE_PATH" -P "$(cat p12pw.txt)" -A -t cert -f pkcs12 -k "$KEYCHAIN_PATH"
          rm -f p12pw.txt

          # Cho phép codesign/xcodebuild truy cập private key (tránh "User interaction is not allowed")
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN_PATH"

          # Đưa keychain tạm vào search list để xcodebuild tìm thấy
          security list-keychain -d user -s "$KEYCHAIN_PATH"

      # Tải và cài đặt Provisioning Profile App Store bằng App Store Connect API (dùng 3 secrets theo ảnh)
      - name: Download provisioning profile (App Store)
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ env.BUNDLE_ID }}
          profile-type: IOS_APP_STORE
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Pod install (iOS)
        run: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Create ExportOptions.plist
        run: |
          cat > ExportOptions.plist <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store</string>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>destination</key>
            <string>export</string>
            <key>manageAppVersionAndBuildNumber</key>
            <true/>
          </dict>
          </plist>
          EOF

      - name: Build iOS (IPA)
        env:
          CI: true
        run: flutter build ipa --release --export-options-plist=ExportOptions.plist

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ios-ipa
          path: build/ios/ipa/*.ipa

      # Dọn dẹp keychain tạm sau khi build
      - name: Clean up temporary keychain
        if: ${{ always() }}
        run: |
          security delete-keychain "$RUNNER_TEMP/app-signing.keychain-db" || true

  release:
    name: Upload IPA to TestFlight
    needs: [build]
    runs-on: macos-latest
    steps:
      - name: Download IPA artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: ios-ipa
          path: build
          merge-multiple: true

      # Lưu .p8 về đúng vị trí để altool/Transporter tự nhận
      - name: Install App Store Connect API key (.p8)
        env:
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_PRIVATE_KEY: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        run: |
          set -euo pipefail
          mkdir -p ~/private_keys
          # Secret APPSTORE_PRIVATE_KEY là nội dung PEM đầy đủ (BEGIN/END PRIVATE KEY)
          printf '%s' "$APPSTORE_PRIVATE_KEY" > ~/private_keys/AuthKey_${APPSTORE_KEY_ID}.p8

      - name: Upload to App Store (TestFlight)
        env:
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        run: |
          set -euo pipefail
          xcrun altool --upload-app \
            --type ios \
            -f build/ios/ipa/*.ipa \
            --apiKey "$APPSTORE_KEY_ID" \
            --apiIssuer "$APPSTORE_ISSUER_ID"

      # (Tuỳ chọn) Tạo GitHub Release chỉ với IPA. Có thể bỏ nếu không cần.
      - name: Publish GitHub Release (IPA only)
        uses: ncipollo/release-action@v1.14.0
        with:
          name: ${{ github.ref_name }}
          tag: ${{ github.ref_name }}
          artifacts: build/ios/ipa/*.ipa
